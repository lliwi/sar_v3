# Flask Configuration
FLASK_ENV=development
FLASK_PORT=5000
FLASK_DEBUG=True
LOG_LEVEL=INFO

# Gunicorn Configuration
GUNICORN_TIMEOUT=300
# SECURITY WARNING: Change this to a secure 32+ character key in production
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=tu-clave-secreta-muy-segura

# Database Configuration
DATABASE_URL=postgresql://saruser:password@db:5432/sarapp
POSTGRES_DB=sarapp
POSTGRES_USER=saruser
POSTGRES_PASSWORD=tu-password-seguro
POSTGRES_PORT=5432
POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
POSTGRES_MAX_CONNECTIONS=100

# Redis Configuration
REDIS_PORT=6379

# Session and Security
SESSION_TIMEOUT=3600
CSRF_TIMEOUT=3600
MAX_CONTENT_LENGTH=16777216

# LDAP Configuration
LDAP_HOST=ldap://tu-controlador-dominio.com
LDAP_BASE_DN=dc=empresa,dc=com
LDAP_USER_DN=ou=Users,dc=empresa,dc=com
LDAP_GROUP_DN=ou=Groups,dc=empresa,dc=com
LDAP_BIND_USER_DN=cn=cuenta-servicio,ou=Users,dc=empresa,dc=com
LDAP_BIND_USER_PASSWORD=password-cuenta-servicio
LDAP_ATTR_USER=cn
LDAP_ATTR_DEPARTMENT=department
LDAP_ATTR_EMAIL=mail
LDAP_ATTR_FIRSTNAME=givenName
LDAP_ATTR_LASTNAME=sn
LDAP_SEARCH_OUS=ou=Users,dc=empresa,dc=com
LDAP_CONNECTION_TIMEOUT=30
LDAP_SEARCH_TIMEOUT=60
LDAP_USE_SSL=false
LDAP_ADMIN_GROUPS=Domain Admins,Administrators,Enterprise Admins

# SMTP Configuration
SMTP_SERVER=smtp.empresa.com
SMTP_PORT=587
SMTP_USERNAME=noreply@empresa.com
SMTP_PASSWORD=password-smtp
SMTP_USE_TLS=true
SMTP_USE_SSL=false
SMTP_TIMEOUT=30
SMTP_FROM=noreply@empresa.com

# Admin Notifications
ADMIN_EMAIL=admin@empresa.com
ADMIN_NOTIFICATION_ENABLED=true

# Celery Configuration
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_ACCEPT_CONTENT=json
CELERY_TIMEZONE=UTC
CELERY_ENABLE_UTC=true
CELERY_WORKER_PREFETCH_MULTIPLIER=1

# =====================================
# CELERY MULTIPLE WORKERS CONFIGURATION
# =====================================
# Worker Concurrency - Number of concurrent processes per worker type
CELERY_WORKER_SYNC_CONCURRENCY=2          # Heavy sync operations (lower to avoid DB overload)
CELERY_WORKER_NOTIFICATIONS_CONCURRENCY=4  # Fast email notifications (higher for quick processing)
CELERY_WORKER_REPORTS_CONCURRENCY=3       # Reports and general tasks (balanced)

# Queue Prefetch - How many tasks each worker prefetches from Redis
CELERY_SYNC_QUEUE_PREFETCH=1              # Low prefetch for heavy tasks (avoid memory issues)
CELERY_NOTIFICATIONS_QUEUE_PREFETCH=2     # Higher prefetch for fast tasks
CELERY_REPORTS_QUEUE_PREFETCH=1           # Balanced prefetch for reports

# Performance Tuning
CELERY_WORKER_MAX_TASKS_PER_CHILD=1000    # Maximum tasks per worker before restart (prevents memory leaks)
CELERY_WORKER_TASK_TIME_LIMIT=7200        # 2 hours hard limit for sync tasks
CELERY_WORKER_TASK_SOFT_TIME_LIMIT=6600   # 1h 50m soft limit (sends warning)

# Monitoring and Events
CELERY_SEND_EVENTS=true
CELERY_TASK_SEND_SENT_EVENT=true

# Airflow Configuration (Task Management Integration - Production)
AIRFLOW_API_URL=http://airflow:8080/api/v1
AIRFLOW_USERNAME=admin
AIRFLOW_PASSWORD=password-airflow
AIRFLOW_TIMEOUT=300
AIRFLOW_VERIFY_SSL=false
AIRFLOW_DAG_NAME=SAR_V3
AIRFLOW_RETRY_ATTEMPTS=3
AIRFLOW_RETRY_DELAY=60
# Authorization Token (Base64 of username:password) - Used for Airflow 2.x
AIRFLOW_AUTH_TOKEN=
# Force specific version (optional): '2' for Airflow 2.x, '3' for Airflow 3.x, leave empty for auto-detection
AIRFLOW_FORCE_VERSION=

# CSV Configuration
CSV_OUTPUT_DIR=/tmp/sar_csv_files
AD_DOMAIN_PREFIX=
AD_TARGET_DOMAIN=AUDI

# Application URLs
SERVER_URL=http://localhost:5000
BASE_URL=http://localhost:5000

# Task Management Configuration
TASK_PROCESSING_INTERVAL=300
TASK_MAX_RETRIES=3
TASK_RETRY_DELAY=300
TASK_CLEANUP_DAYS=30

# Immediate Task Execution Configuration
IMMEDIATE_AIRFLOW_TIMEOUT=300     # Timeout in seconds for immediate Airflow DAG execution (5 minutes)
IMMEDIATE_VERIFICATION_TIMEOUT=60 # Timeout in seconds for immediate AD verification (1 minute)

# AD Synchronization Scheduler Configuration
AD_USER_SYNC_ENABLED=true
AD_GROUP_SYNC_ENABLED=true
AD_USER_PERMISSIONS_SYNC_ENABLED=true
AD_ACTIVE_PERMISSIONS_SYNC_ENABLED=true
# AD Synchronization Interval Configuration (in seconds)
AD_USER_SYNC_INTERVAL=600  # 10 minutes default
AD_GROUP_SYNC_INTERVAL=300  # 5 minutes default
AD_USER_PERMISSIONS_SYNC_INTERVAL=900  # 15 minutes default
AD_ACTIVE_PERMISSIONS_SYNC_INTERVAL=1800  # 30 minutes default


# =======================================
# OPTIMIZED MEMBERSHIP SYNC CONFIGURATION
# =======================================
# Configuration for optimized membership synchronization
MEMBERSHIP_SYNC_ENABLE_FALLBACK=true           # Enable intelligent user fallback lookup
MEMBERSHIP_SYNC_MAX_FALLBACK_LOOKUPS=0          # No limit - process all users (0 = unlimited)
MEMBERSHIP_SYNC_BATCH_SIZE_GROUPS=10           # Groups processed in each batch

# Threading Configuration for Active Permissions Sync

SYNC_MAX_RETRIES=3
SYNC_RETRY_DELAY=60
TASK_CLEANUP_DAYS=30
TASK_BATCH_SIZE=10

# Active Directory Domain Configuration
AD_DOMAIN_PREFIX=
AD_TARGET_DOMAIN=AUDI
# Security: Session cookies configuration
# SESSION_COOKIE_SECURE=true    # Enable in production (HTTPS only)
# SESSION_COOKIE_HTTPONLY=true  # Automatically enabled by Flask-Login
# SESSION_COOKIE_SAMESITE=Strict # CSRF protection
MAX_CONTENT_LENGTH=16777216

# Time Zone Configuration
TZ=Europe/Madrid


# Feature Flags
ENABLE_TASK_MONITORING=true
ENABLE_AUTO_CLEANUP=true
ENABLE_AUDIT_LOGGING=true
ENABLE_EMAIL_NOTIFICATIONS=true

# Background Sync Configuration - Batch Processing
# Procesa TODAS las carpetas activas divididas en lotes del tamaño especificado
BACKGROUND_SYNC_MAX_FOLDERS=50  # Carpetas por lote (no límite total)
BACKGROUND_SYNC_MAX_MEMBERS_PER_GROUP=200  # Máximo miembros por grupo AD
BACKGROUND_SYNC_BATCH_SIZE=25  # Tamaño lote para commits en base de datos
BACKGROUND_SYNC_ENABLE_FULL_SYNC=true  # Crear usuarios nuevos si no existen

# Security Enhancements Configuration
# Applied automatically by Flask application - no manual configuration needed
# - Session fixation prevention: Enabled
# - CSRF protection: Enabled with Flask-WTF
# - Secure cookie configuration: Auto-configured based on FLASK_ENV
# - SECRET_KEY validation: Enforced in production